name: Build for Windows
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      upload:
        required: true
        type: boolean
        default: false
    outputs:
      ARCHIVE_NAME: ${{ jobs.build-for-windows.outputs.ARCHIVE_NAME }}

concurrency:
    group: unit_test
    cancel-in-progress: true

jobs:
  build-for-windows:
    runs-on: windows-latest
    outputs:
      ARCHIVE_NAME: ${{ steps.build.outputs.ARCHIVE_NAME }}
    steps:
      - name: Configure build for x86_64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_64
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.1.*'
          version: '6.8.1'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2022_64'
          modules: 'qt5compat qtwebsockets qthttpserver qtshadertools qtimageformats qtscxml'
          tools: 'tools_opensslv3_x64 tools_opensslv3_src tools_ninja tools_qtcreator_gui,qt.tools.qtcreator_gui'
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build for Windows
        id: build
        env:
          VERSION_NO: ${{ needs.prepare.outputs.VERSION_NO }}
        run: |
          echo "::group::Build zlib"
          cd 3rdparty
          mkdir build-zlib
          cd build-zlib
          cmake ../zlib -G "Visual Studio 17 2022" -DCMAKE_INSTALL_PREFIX="../../zlib" -A x64
          cmake --build . --config RELEASE --target INSTALL
          cd ../..
          echo "::endgroup::"

          echo "::group::Build hagoromo"
          $PSDefaultParameterValues['Out-File:Encoding'] = 'utf8'
          echo "#ifndef ENCRYPTION_SEED_H" > .\lib\tools\encryption_seed.h
          echo "#define ENCRYPTION_SEED_H" >> .\lib\tools\encryption_seed.h
          echo "#define ENCRYPT_SEED ""${{ secrets.HAGOROMO_ENCRYPT_SEED_FOR_WINDOWS }}""" >> .\lib\tools\encryption_seed.h
          echo "#endif // ENCRYPTION_SEED_H" >> .\lib\tools\encryption_seed.h
          $env:Path+=(";" + $env:QT_ROOT_DIR + "\..\..\Tools\QtCreator\bin\jom")
          mkdir build-hagoromo
          mkdir deploy-hagoromo/hagoromo
          cd build-hagoromo
          qmake ..\Hagoromo.pro CONFIG+=HAGOROMO_RELEASE_BUILD
          # nmake
          jom
          cd ..
          echo "::endgroup::"

          echo "::group::Deploy hagoromo"
          Copy-Item build-hagoromo\app\release\Hagoromo.exe deploy-hagoromo\hagoromo\
          Copy-Item build-hagoromo\app\release\*.dll deploy-hagoromo\hagoromo\
          windeployqt --qmldir app\qml deploy-hagoromo\hagoromo\Hagoromo.exe
          python3 scripts\copymsvcfiles.py ($env:VSINSTALLDIR + "VC\Redist\MSVC") deploy-hagoromo\hagoromo\
          Copy-Item build-hagoromo\app\release\translations\*.qm deploy-hagoromo\hagoromo\translations\
          Compress-Archive -Path deploy-hagoromo\hagoromo -DestinationPath ("deploy-hagoromo\hagoromo_" + $env:VERSION_NO + "_windows.zip")
          echo "::endgroup::"

          # echo "Make for Windows"
          # mkdir deploy-hagoromo/hagoromo
          # echo "for windows" > deploy-hagoromo/hagoromo/hagoromo.txt
          # Compress-Archive -Path deploy-hagoromo\hagoromo -DestinationPath ("deploy-hagoromo\hagoromo_" + $env:VERSION_NO + "_windows.zip")

          ls .\deploy-hagoromo\
          echo ("ARCHIVE_NAME=hagoromo_" + $env:VERSION_NO + "_windows.zip") >> "$env:GITHUB_OUTPUT"
      - name: Upload a archive
        if: ${{ github.event.inputs.upload == true }}
        uses: actions/upload-artifact@v4
        with:
          name: archive_for_windows
          path: "deploy-hagoromo/${{ steps.build.outputs.ARCHIVE_NAME }}"
